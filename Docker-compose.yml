version: "3"
services:
  web:
    container_name: django_server
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - .:/var/www/myproject
    ports:
      - "8000:8000"
    networks:
      - all
    command: bash -c "sleep 5 && python manage.py makemigrations  && python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
             && gunicorn -c gunicorn.conf fundoonote.wsgi
    depends_on:
      - mysql_db
      - redis

  mysql_db:
    container_name: mysql_database
    image: 'mysql:5.7'
    ports:
      - "3306:3306"
    environment:
       - MYSQL_DATABASE=myproject
       - MYSQL_USER=myprojectuser
       - MYSQL_PASSWORD=Hello123#
       - MYSQL_ALLOW_EMPTY_PASSWORD=yes
    networks:
      - all

  redis:
    container_name: 'redis'
    image: 'redis:3.2.0'
    ports:
      - '127.0.0.1:6379:6379'
    networks:
      - all

#  apache_server:
#    container_name: apache_doc
#    image: httpd
#    ports:
#    - "80:80"
#    networks:
#     - all

  nginx_server:
    build:
      context: .
      dockerfile: dockerfile
    container_name: nginx_container
    image: nginx
    volumes:
     - ./fundoonote.static:/var/www/fundoonote/static
    ports:
     - "80:80"
    environment:
     - NGINX_HOST=myproject.com
     - NGINX_PORT=80
    depends_on:
      -web
      -mysql_db

  elastic_server:
    container_name: elastic_search
    image: docker.elastic.co/elasticsearch/elasticsearch:7.4.2
    environment:
      - node.name=node-1
      - cluster.name=fundoo_notes_cluster
      - bootstrap.memory_lock=true
      - cluster.initial_master_nodes=node-1
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    volumes:
      - .:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
    networks:
      - all

  networks:
    all:
      driver: bridge
